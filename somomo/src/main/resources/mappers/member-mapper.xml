<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">
  	
	<resultMap type="member" id="memberResultSet">
		<result column="USER_ID" property="userId"/>
		<result column="USER_PWD" property="userPwd"/>
		<result column="NICKNAME" property="nickname"/>
		<result column="PHONE" property="phone"/>
		<result column="EMAIL" property="email"/>
		<result column="AGE" property="age"/>
		<result column="GENDER" property="gender"/>
		<result column="PROFILE_IMG" property="profileImg"/>
		<result column="ENROLL_DATE" property="enrollDate"/>
		<result column="KAKAO_LOGIN" property="kakaoLogin"/>
		<result column="STATUS" property="status"/>
	</resultMap>

	<resultMap id="feedBoardResultSet" type="feedBoard">
		<result column="BOARD_NO" property="boardNo" />
		<result column="BOARD_TYPE" property="boardType" />
		<result column="BOARD_TITLE" property="boardTitle" />
		<result column="LIKE_CHECK" property="likeCheck" />
		<result column="PROFILE_IMG" property="profileImg"/>
	</resultMap>
	
	
	<resultMap id="myPageResultSet" type="feedBoard">
		<result column="BOARD_NO" property="boardNo" />
		<result column="BOARD_TITLE" property="boardTitle" />
		<result column="BOARD_TYPE" property="boardType" />
		<result column="COUNT" property="count"/>
		<result column="LIKE_COUNT" property="countLike" />
	</resultMap> 


	
	
	
	<!-- 멤버로그인 -->
	<select id="loginMember" parameterType="member" resultMap="memberResultSet">
		SELECT
			   USER_ID,
			   USER_PWD,
			   NICKNAME,
			   PHONE,
		 	   AGE,
		 	   EMAIL,
			   GENDER,
			   PROFILE_IMG,
		       TO_CHAR(ENROLL_DATE, 'YYYY"년" MM"월" DD"일"') AS ENROLL_DATE,
			   KAKAO_LOGIN,
			   STATUS
		  FROM MEMBER 
		 WHERE USER_ID = #{userId}
		   AND STATUS='Y'
	</select>
	
	<!-- 회원가입 -->
	<insert id="insertMember" parameterType="member">
		INSERT
		  INTO MEMBER
		  	  	(
		  	  	USER_ID,
				USER_PWD,
				NICKNAME,
				PHONE,
				EMAIL,
				AGE,
				GENDER,
				PROFILE_IMG
		  	  	)
		VALUES
			   (
			   #{userId},
			   #{userPwd},
			   #{nickname},
			   #{phone},
			   #{email},
			   #{age},
			   #{gender},
			   #{profileImg}
			   )
	</insert>
	
	<!-- 아이디 중복체크 -->
	<select id="idCheck" resultType="_int"> 
		SELECT COUNT(*)
		  FROM MEMBER
		 WHERE USER_ID = #{checkId}
	</select>	

	<!-- 닉네임 중복체크 -->
	<select id="NickNameCheck" resultType="_int">
		SELECT COUNT(*)
		  FROM MEMBER
		 WHERE NICKNAME = #{nickname}
	</select>
	
	<!-- 회원정보 업데이트 -->
	<update id="updateMember" parameterType="member">
		UPDATE
			   MEMBER
		   SET
		   	   NICKNAME = #{nickname},
		   	   PHONE = #{phone},
			   EMAIL = #{email},
			   PROFILE_IMG = #{profileImg}
		 WHERE 
		 	   USER_ID=#{userId}
	       AND STATUS='Y'
	</update>
	
	<!-- 회원탈퇴 -->
	<update id="deleteMember" parameterType="string">
		UPDATE
			   MEMBER
		   SET
		   	  STATUS='N'
		 WHERE 
		 	   USER_ID=#{userId}
	       AND STATUS='Y'
	</update>
	
	<!-- 비밀번호 변경 전 확인 -->
	<select id="oldUserPwd" resultType="_int" parameterType="member">
		SELECT COUNT(*) FROM MEMBER 
	     WHERE USER_ID = #{userId}
	</select>
	
	<!-- 비밀번호 변경 -->
	<update id="updatePwd" parameterType="member">
		UPDATE
			   MEMBER
		   SET
		       USER_PWD = #{userPwd}
		 WHERE
			   USER_ID = #{userId}
	</update>
	
	<!-- 이메일 인증 -->
	<insert id="regist" parameterType="cert">
		INSERT INTO CERT(WHO, SECRET, WHEN)
		VALUES (#{who},#{secret},sysdate)
	</insert>
	
	<!-- 이메일 인증 -->
	<select id="validate" resultType="cert" parameterType="cert">
		SELECT 
			   WHO,
			   SECRET,
			   WHEN
		  FROM
		  	   CERT
		 WHERE WHO = #{who}
		   AND SECRET = #{secret}
		   AND WHEN BETWEEN SYSDATE - 3/24/60 AND SYSDATE
	</select>
	
	<!-- 인증확인 시 삭제 -->
	<delete id="remove" parameterType="cert">
		DELETE CERT
		 WHERE WHO = #{who} 
		   AND SECRET = #{secret}
	</delete>
	
	<!-- 아이디 찾기 -->
	<select id="searchId" resultMap="memberResultSet" parameterType="member">
		SELECT USER_ID
		  FROM MEMBER
		 WHERE PHONE = #{phone}
		   AND EMAIL = #{email}
	</select>
	
	<!-- 비밀번호 찾기 -->
	<select id="searchPwd" resultType="_int" parameterType="member">
		SELECT COUNT(*)
		  FROM MEMBER
		 WHERE USER_ID=#{userId}
		   AND EMAIL = #{email}
	</select>
	
	<!-- 비밀번호 찾기 시 임시비밀번호 -->
	<update id="changeUpPwd">
		UPDATE
			   MEMBER
		   SET
		       USER_PWD = #{memberPw}
		 WHERE
			   USER_ID = #{m.userId}
		   AND EMAIL = #{m.email}
	</update>
	
	<select id="likeList" resultMap="feedBoardResultSet">
		SELECT 
               BOARD_NO,
               FD.BOARD_TITLE,
               M.PROFILE_IMG,
               LIKE_CHECK
 		  FROM
               FEED_BOARD FD
     LEFT JOIN FEED_LIKES FL USING (BOARD_NO)
	 LEFT JOIN MEMBER M ON(FD.BOARD_WRITER = M.USER_ID)
 	 LEFT JOIN
               (SELECT 
                       BOARD_NO,
                       'Y' AS LIKE_CHECK
                  FROM 
                       FEED_LIKES 
                 WHERE
                       USER_ID = #{userId}) USING (BOARD_NO)
	      WHERE FD.STATUS='Y'
	        AND FD.BOARD_TYPE='G'
	        AND FL.USER_ID = #{userId}
	
	</select>
	
	<select id="favoriteList" resultMap="feedBoardResultSet">
		SELECT 
               BOARD_NO,
               FD.BOARD_TITLE,
               M.PROFILE_IMG,
               LIKE_CHECK
 		  FROM
               FEED_BOARD FD
     LEFT JOIN FEED_LIKES FL USING (BOARD_NO)
	 LEFT JOIN MEMBER M ON(FD.BOARD_WRITER = M.USER_ID)
 	 LEFT JOIN
               (SELECT 
                       BOARD_NO,
                       'Y' AS LIKE_CHECK
                  FROM 
                       FEED_LIKES 
                 WHERE
                       USER_ID = #{userId}) USING (BOARD_NO)
	      WHERE FD.STATUS='Y'
	        AND FD.BOARD_TYPE='M'
	        AND FL.USER_ID = #{userId}
	</select>
	
	<delete id="deleteLikeY" parameterType="hashmap">
		DELETE 
		  FROM
		       FEED_LIKES
		 WHERE
		       USER_ID = #{userId}
		   AND
		       BOARD_NO = #{boardNo}
	</delete>
	
	
	
	<!-- 내가 쓴 일반글 조회 -->
	
	
	<select id="feedGeneralBoardList" resultMap="myPageResultSet">
	
			SELECT 
					BOARD_NO,
       				FD.BOARD_TITLE,
       				COUNT,
       				LIKE_COUNT
       			FROM
        			FEED_BOARD FD
       LEFT JOIN MEMBER M ON(FD.BOARD_WRITER = M.USER_ID)
       LEFT JOIN (
        
			        SELECT BOARD_NO, COUNT(*) AS LIKE_COUNT
			            FROM FEED_LIKES
			            GROUP BY BOARD_NO)USING (BOARD_NO
			     )
          WHERE FD.STATUS='Y'
            AND FD.BOARD_TYPE='G'
            AND FD.BOARD_WRITER = #{userId}
	
	</select>
	
	
	<!-- 내가 쓴 모임모집 글 조회 -->
	
	
	
	<select id="feedMeetBoardList" resultMap="myPageResultSet">
	
			SELECT 
					BOARD_NO,
       				FD.BOARD_TITLE,
       				COUNT,
       				LIKE_COUNT
       			FROM
        			FEED_BOARD FD
       LEFT JOIN MEMBER M ON(FD.BOARD_WRITER = M.USER_ID)
       LEFT JOIN (
        
			        SELECT BOARD_NO, COUNT(*) AS LIKE_COUNT
			            FROM FEED_LIKES
			            GROUP BY BOARD_NO)USING (BOARD_NO
			     )
          WHERE FD.STATUS='Y'
            AND FD.BOARD_TYPE='M'
            AND FD.BOARD_WRITER = #{userId}
	
	</select>
	
	
	
	<!-- 카카오 회원 추가 -->
	<insert id="insertKakaoMember" parameterType="member">
		INSERT
		  INTO MEMBER
		  	  	(
		  	  	USER_ID,
				NICKNAME,
				PHONE,
				EMAIL,
				AGE,
				GENDER,
				PROFILE_IMG,
				KAKAO_LOGIN
		  	  	)
		VALUES
			   (
			   #{userId},
			   #{nickname},
			   #{phone},
			   #{email},
			   #{age},
			   #{gender},
			   #{profileImg},
			   'Y'
			   )
	</insert>
	
	<!-- 카카오 회원 탈퇴 -->
	<delete id="deleteKakaoUser" parameterType="string">
		DELETE
	  	  FROM MEMBER
	  	 WHERE USER_ID = #{userId} 
	</delete>
	
</mapper>
